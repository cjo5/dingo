[
    {
        "tests": [
            "bad_cast.dg",
            "bad_expr.dg",
            "bad_sizeof.dg",
            "comparison.dg",
            "defer.dg",
            "if.dg",
            "incomplete_type.dg",
            "limits.dg",
            "literals.dg",
            "logic.dg",
            "math.dg",
            "sizeof.dg",
            "type_in_expr.dg",
            "typealias.dg",
            "typeof.dg",
            "use_before_decl.dg",
            "void.dg"
        ]
    },
    {
        "dir": "dep",
        "tests": [
            "function_signature.dg",
            "function_val.dg",
            "functions.dg",
            "nested_typealias_cycle.dg",
            "struct_cycle.dg",
            "structs.dg",
            "typealias_cycle.dg",
            "typealias.dg",
            "typeof_cycle.dg",
            "use_cycle.dg"
        ]
    },
    {
        "dir": "function",
        "tests": [
            "arguments.dg",
            "bad_arguments.dg",
            "literal.dg"
        ]
    },
    {
        "dir": "include",
        "tests": [
            "cycle1.dg",
            "nested_cycle1.dg",
            "self.dg"
        ]
    },
    {
        "dir": "loop",
        "tests": [
            "break.dg",
            "continue.dg",
            "for.dg",
            "nested_for.dg",
            "nested_while.dg",
            "while.dg"
        ]
    },
    {
        "disable": false,
        "dir": "module",
        "tests": [
            "bad_scope.dg",
            "fqn.dg",
            "local_duplicate.dg",
            "scope.dg"
        ]
    },
    {
        "dir": "module",
        "modules": [
            "extra/public_module.dg"
        ],
        "tests": [
            "public_duplicate.dg",
            "private_public_no_duplicate.dg"
        ]
    },
    {
        "disable": false,
        "dir": "module",
        "modules": [
            "extra/modules1.dg",
            "extra/modules2.dg"
        ],
        "tests": [
            "bad_import.dg",
            "bad_use.dg",
            "import.dg",
            "use.dg"
        ]
    },
    {
        "dir": "slice",
        "tests": [
            "offset.dg",
            "pointer_end_index.dg",
            "pointer.dg",
            "read_only.dg"
        ]
    },
    {
        "dir": "struct",
        "tests": [
            "arguments.dg",
            "bad_arguments.dg",
            "bad_methods.dg",
            "methods.dg",
            "opaque.dg"
        ]
    }
]
