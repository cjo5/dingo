include "../common.dg"

struct Foo {
    var count: Int

    fun bar(f: &Foo, a: Int) {
        io::printiln(f.get())
        io::printiln(a)
    }

    fun inc(&var Self) {
        self.count++
    }

    fun inc_twice(f: &var Self) {
        f.inc()
        f.inc()
    }

    fun inc_thrice(f: &var Foo2) {
        f.inc()
        f.inc()
        f.inc()
    }

    fun get(&Self) Int {
        return self.count
    }
}

typealias Foo2 = Foo

extern fun main() C_int {
    val f0 = Foo(1)
    f0.bar(2)
    // expect: 1
    // expect: 2

    val f1 = Foo2(2)
    f1.bar(3)
    // expect: 2
    // expect: 3

    var f2 = Foo(3)
    val bar = f2.bar
    bar(f2, 4)
    // expect: 3
    // expect: 4

    f2.inc()
    f2.inc()
    io::printiln(f2.count)
    // expect: 5

    f2.inc_twice()
    f2.inc_thrice()
    io::printiln(f2.count)
    // expect: 10

    io::printiln(f2.get())
    // expect: 10

    return 0
}