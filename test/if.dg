include "common.dg"

extern fun main() c_int {
    if true {
        println("true") // expect: true
    }

    if not false {
        println("not false") // expect: not false
    }

    val a = true
    if a {
        println("a") // expect: a
    }

    val b = false
    if not b {
        println("not b") // expect: not b
    }

    val c = fun() bool {
        return true
    }

    if c() {
        println("c") // expect: c
    }

    val d = fun() bool {
        return false
    }

    if not d() {
        println("not d") // expect: not d
    }

    val foo = Foo(a: true, b: false)

    if foo.a {
        println("foo.a") // expect: foo.a
    }

    if not foo.b {
        println("not foo.b") // expect: not foo.b
    }

    val bar = [bool](true, false)

    if bar[0] {
        println("bar[0]") // expect: bar[0]
    }

    if not bar[1] {
        println("not bar[1]") // expect: not bar[1]
    }

    return 0
}

struct Foo {
    a: bool
    b: bool
}