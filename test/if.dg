include "common.dg"

extern fun main() c_int {
    if true {
        putln("true") // expect-output: true
    }

    if !false {
        putln("!false") // expect-output: !false
    }

    val a = true
    if a {
        putln("a") // expect-output: a
    }

    val b = false
    if !b {
        putln("!b") // expect-output: !b
    }

    val c = fun() bool {
        return true
    }

    if c() {
        putln("c") // expect-output: c
    }

    val d = fun() bool {
        return false
    }

    if !d() {
        putln("!d") // expect-output: !d
    }

    val foo = Foo{a: true, b: false}

    if foo.a {
        putln("foo.a") // expect-output: foo.a
    }

    if !foo.b {
        putln("!foo.b") // expect-output: !foo.b
    }

    val bar = [true, false]

    if bar[0] {
        putln("bar[0]") // expect-output: bar[0]
    }

    if !bar[1] {
        putln("!bar[1]") // expect-output: !bar[1]
    }

    return 0
}

struct Foo {
    a bool
    b bool
}