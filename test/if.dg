include "common.dg"

extern fun main() c_int {
    if true {
        putln("true") // expect: true
    }

    if !false {
        putln("!false") // expect: !false
    }

    val a = true
    if a {
        putln("a") // expect: a
    }

    val b = false
    if !b {
        putln("!b") // expect: !b
    }

    val c = fun() bool {
        return true
    }

    if c() {
        putln("c") // expect: c
    }

    val d = fun() bool {
        return false
    }

    if !d() {
        putln("!d") // expect: !d
    }

    val foo = Foo{a: true, b: false}

    if foo.a {
        putln("foo.a") // expect: foo.a
    }

    if !foo.b {
        putln("!foo.b") // expect: !foo.b
    }

    val bar = [bool]{true, false}

    if bar[0] {
        putln("bar[0]") // expect: bar[0]
    }

    if !bar[1] {
        putln("!bar[1]") // expect: !bar[1]
    }

    return 0
}

struct Foo {
    a bool
    b bool
}