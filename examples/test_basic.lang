module;

import "dep"

fun main() {
    print "str: ", "text", "\n";
    print "float: ", 3.14, "\n";
    print "int: ", 500, "\n";
    print "bool: ", true, "\n";

    if true && true {
        print "AND true\n";
    } 
    if false && true {
    } else {
        print "AND false\n";
    }
    if true || false {
        print "OR true\n";
    }
    if false || false {

    } else {
        print "OR false\n";
    }
    if !false {
        print "NOT true\n";
    }
    if false {
    } elif true {
        print "ELIF true\n";
    } else {
        print "ERROR!\n";
    }

    print "Comparisons:\n";
    if 4 < 5 {
        print "4 < 5\n";
    }
    if 4 > 3 {
        print "5 > 4\n";
    }
    if 5 >= 5 {
        print "5 >= 5\n";
    }
    if 5 <= 5 {
        print "5 <= 5\n";
    }
    if 5 == 5 {
        print "5 == 5\n";
    }
    if 5 != 4 {
        print "5 != 4\n";
    }

    print "Arithmetic:\n";
    print "5+5==", 5+5, "\n";
    print "5-4==", 5-4, "\n";
    print "5*5==", 5*5, "\n";
    print "25/5==", 25/5, "\n";
    print "25%6==", 25%6, "\n";

    print "While start\n";
    var i: i32 = 0;
    while i < 5 {
        print i, "\n";
        i += 1;
    }
    print "While done\n";

    print "factorial(5) = ", factorial(5), "\n";

    print "Local struct\n";
    var foo: Foo = Foo{a=5, b=3.14, bar=Bar{c=6, d=4.14}};
    printStruct(foo);

    print "Dep struct\n";
    var v2: dep.Vec2 = dep.Vec2{a=2, b=3};
    dep.printVec2(v2);
}

fun factorial(n: i32) -> i32 {
    if n <= 1 {
        return 1;
    }
    return n * factorial(n-1);
}

fun printStruct(foo: Foo) {
    print "foo.a = ", foo.a, "\n";
    print "foo.b = ", foo.b, "\n";
    print "foo.bar.c = ", foo.bar.c, "\n";
    print "foo.bar.d = ", foo.bar.d, "\n";
    print "foo.bar.defaultI32 = ", foo.bar.defaultI32, "\n";
    print "foo.bar.defaultF32 = ", foo.bar.defaultF32, "\n";
    print "foo.bar.defaultBool = ", foo.bar.defaultBool, "\n";
    print "foo.bar.defaultStr = ", foo.bar.defaultString, "\n";
}

struct Foo {
    a: i32;
    b: f32;
    bar: Bar;
}

struct Bar {
    c: i64;
    d: f64;
    defaultI32: i32;
    defaultF32: f32;
    defaultBool: bool;
    defaultString: str;
}