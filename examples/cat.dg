include "../std/lib.dg"

extern fun main(argc: c_int, argv: &&c_char) c_int {
    val args = &argv[:argc]

    if len(args) != 2 {
        io::println("exactly 1 argument required")
        return 1
    }
    
    return cat(args[1])
}

fun cat(filename: &c_char) c_int {
    val file = libc::fopen(filename, c"r")
    if file == null {
        libc::perror(filename)
        return 1
    }
    defer libc::fclose(file)

    var buffer: [i8:1024]
    var n: c_usize = 1
    var total: c_usize

    while n > 0 {
        n = libc::fread(&var buffer[0], 1, 1024, file)
        io::print(&buffer[:n])
        total += n
    }

    if total > 0 {
        io::putchar('\n')
    }

    val err = libc::ferror(file)
    if err != 0 {
        io::println("read failed")
    }

    return err
}