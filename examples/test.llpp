; ModuleID = 'examples/test.cpp'
source_filename = "examples/test.cpp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.11.0"

%class.Foo = type { i32 }

@a = global i32 0, align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_test.cpp, i8* null }]

; Function Attrs: ssp uwtable
define internal void @__cxx_global_var_init() #0 section "__TEXT,__StaticInit,regular,pure_instructions" {
  %1 = call i32 @_Z4getav()
  store i32 %1, i32* @a, align 4
  ret void
}

declare i32 @_Z4getav() #1

; Function Attrs: norecurse ssp uwtable
define i32 @main() #2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.Foo, align 4
  %2 = alloca %class.Foo, align 4
  %3 = alloca i8*
  %4 = alloca i32
  call void @_ZN3FooC1Ev(%class.Foo* %1)
  invoke void @_ZN3FooC1Ev(%class.Foo* %2)
          to label %5 unwind label %9

; <label>:5                                       ; preds = %0
  invoke void @printfoo(%class.Foo* %1)
          to label %6 unwind label %13

; <label>:6                                       ; preds = %5
  invoke void @_ZN3FooD1Ev(%class.Foo* %2)
          to label %7 unwind label %9

; <label>:7                                       ; preds = %6
  invoke void @printfoo(%class.Foo* %1)
          to label %8 unwind label %9

; <label>:8                                       ; preds = %7
  call void @_ZN3FooD1Ev(%class.Foo* %1)
  ret i32 0

; <label>:9                                       ; preds = %7, %6, %0
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  br label %18

; <label>:13                                      ; preds = %5
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %3, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %4, align 4
  invoke void @_ZN3FooD1Ev(%class.Foo* %2)
          to label %17 unwind label %25

; <label>:17                                      ; preds = %13
  br label %18

; <label>:18                                      ; preds = %17, %9
  invoke void @_ZN3FooD1Ev(%class.Foo* %1)
          to label %19 unwind label %25

; <label>:19                                      ; preds = %18
  br label %20

; <label>:20                                      ; preds = %19
  %21 = load i8*, i8** %3, align 8
  %22 = load i32, i32* %4, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

; <label>:25                                      ; preds = %18, %13
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #5
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN3FooC1Ev(%class.Foo*) unnamed_addr #0 align 2 {
  %2 = alloca %class.Foo*, align 8
  store %class.Foo* %0, %class.Foo** %2, align 8
  %3 = load %class.Foo*, %class.Foo** %2, align 8
  call void @_ZN3FooC2Ev(%class.Foo* %3)
  ret void
}

declare i32 @__gxx_personality_v0(...)

declare void @printfoo(%class.Foo*) #1

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN3FooD1Ev(%class.Foo*) unnamed_addr #0 align 2 {
  %2 = alloca %class.Foo*, align 8
  store %class.Foo* %0, %class.Foo** %2, align 8
  %3 = load %class.Foo*, %class.Foo** %2, align 8
  call void @_ZN3FooD2Ev(%class.Foo* %3)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #6
  call void @_ZSt9terminatev() #5
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN3FooC2Ev(%class.Foo*) unnamed_addr #4 align 2 {
  %2 = alloca %class.Foo*, align 8
  store %class.Foo* %0, %class.Foo** %2, align 8
  %3 = load %class.Foo*, %class.Foo** %2, align 8
  %4 = getelementptr inbounds %class.Foo, %class.Foo* %3, i32 0, i32 0
  store i32 9, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN3FooD2Ev(%class.Foo*) unnamed_addr #4 align 2 {
  %2 = alloca %class.Foo*, align 8
  store %class.Foo* %0, %class.Foo** %2, align 8
  %3 = load %class.Foo*, %class.Foo** %2, align 8
  %4 = getelementptr inbounds %class.Foo, %class.Foo* %3, i32 0, i32 0
  store i32 5, i32* %4, align 4
  ret void
}

; Function Attrs: ssp uwtable
define internal void @_GLOBAL__sub_I_test.cpp() #0 section "__TEXT,__StaticInit,regular,pure_instructions" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { ssp uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse ssp uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"Apple LLVM version 8.0.0 (clang-800.0.42.1)"}
