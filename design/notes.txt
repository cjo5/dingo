TODO (in no particular order):
- LLVM
    - Research on alignment
    - Debug symbols
- Module system
    - Use modules
        - use a, use a.b etc
    - Fix dotted module names: a.b.c etc
    - Name mangling
    - C linkage
    - Specify mappings between module names and paths
    - Apply visibility modifier to multiple vars/functions by using () (same as Go)
    - Declarations are private by default
    - Modules can be declared multiple times.
- C lib
    - Separate primitive types for C
- Fix global initialization (currently non-constants are allowed, which doesn't work in LLVM)
- Optional semicolons
- Nested functions
- Improve error messages
    - Show region of source code where error happened (e.g. line + 1 above and 1 below)
    - Unique error code
- Memory management and arrays
    - Non nullable pointers instead of c++ references
    - Explicit pointer semantics. move, share etc.
- Add tests
    - Go tests
    - Dingo tests
- Refactor semantics package. The use of AST, symbol and type is very confusing right now.
    - Remove Node from Symbol struct
        - This will require a new way to handle decl dependencies (use map instead?)
- Add methods
- Add characters
- Add anonymous functions
- Add anonymous structs
- Add enums
- Only allow subset of features when writing C/C++ module
- Generics
- Idiomatic error handling
- Ad hoc polymorphism 
- Operator overloading?
- Type alias
- Macros / preprocessor
    - Conditional compilation
- Make it easier to merge tokens
- Default function arguments + keyed arguments
- Parse escape sequences in string literal
- Rewrite expression grammar and parser to something simpler
- Trailing commas 