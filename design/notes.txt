TODO (in no particular order):
- Compile to LLVM
    - Structs
    - Name mangling
    - Research on alignment
- Improve module system
    - Use modules
        - use a, use a.b etc
    - Don't use separate scopes for private and public
    - Fix dotted module names: a.b.c etc
    - Specify mappings between module names and paths
    - Apply visibility modifier to multiple vars/functions by using () (same as Go)
    - Declarations are private by default
    - Modules can be declared multiple times.
- Declarations
    - Basic C lib wrapper
- Conventions
    - File names are snake_case. If module is a.b, path should be a/b.lang, or a/b/module.lang if there are submodules.
    - File names of partial modules should be a/b_details_etc.lang
    - Modules are lowercase and preferably a single word
    - Types are PascalCase
    - Variables and functions are camelCase
    - Static constants are UPPERCASE_AND_UNDERSCORE.
- Memory management and arrays
    - Non nullable pointers instead of c++ references
    - Explicit pointer semantics. move, share etc.
- Add tests
    - Go tests
    - Dingo tests
- Refactor semantics package. The use of AST, symbol and type is very confusing right now.
    - Remove Node from Symbol struct
        - This will require a new way to handle decl dependencies (use map instead?)
- Add methods
- Add characters
- Add anonymous functions
- Add anonymous structs
- Add enums
- Only allow subset of features when writing C/C++ module
- Generics
- Idiomatic error handling
- Ad hoc polymorphism
- Type alias
- Macros / preprocessor
- VM improvements
    - Fix issue with nested loops
    - Make it possible to call native (go) functions
    - Print vm state
    - Scoped variables should expand and shrink locals array
- Make it easier to merge tokens
- Default function arguments + keyed arguments
- Parse escape sequences in string literal
- Rewrite expression grammar and parser to something simpler
- Trailing commas 