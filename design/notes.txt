TODO:
- LLVM
    - Struct alignment and padding
    - Debug symbols
    - Fix scoping rules
    - Temp storage
- Memory management and arrays
    - Run time bounds check
    - Non nullable pointers 
    - Ownership system / smart pointers
- Module system
    - Use modules
        - use a, use a.b etc
    - Fix dotted module names: a.b.c etc
    - Name mangling
    - C linkage
    - Specify mappings between module names and paths
    - Apply visibility modifier to multiple vars/functions by using () (same as Go)
    - Declarations are private by default
    - Modules can be declared multiple times.
- sizeof operator
- Add function literals
- Create slice from pointer
- Dedicated size type (size_t in C)
- C lib
    - Separate primitive types for C
- Change pointer type syntax to & instead of *
- for loops
    * for i u32 = 0; i < 5; i++ {}
    - for i in [0..9] {}
    - for x in a {}; iterate a slice / array
    - for *x in a{}; iterate a slice / array with pointer to element
    - for i, x in a {};; iterate a slice / array with index
- Initializer list
- Improve error messages
    - Don't print synthetic expressions 
    - Show region of source code where error happened (e.g. line + 1 above and 1 below)
- Add tests
    - Go tests
    - Dingo tests
- Change struct initialization
    - With keys foo{a: 2}
    - Without keys foo{2}
- Bit operations
- Concurrent compilation
- Invalidate keyword? Any use after an identifier has been invalidated will cause an error.
- Add methods
- Add characters
- Add anonymous structs
- Add enums
- Only allow subset of features when writing C/C++ module
- Generics / templates
- Idiomatic error handling
- Operator overloading?
- Type alias
- Macros / preprocessor
    - Conditional compilation
- Default function arguments + keyed arguments
- Parse escape sequences in string literal