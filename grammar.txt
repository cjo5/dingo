# {} : 0 or more
# *  : 0 or more
# [] : optional

module = ['module' IDENT ';'] stmt*

stmt = blockStmt | declStmt | printStmt | ifStmt | whileStmt | 'break' ';' | 'continue' ';' | exprStmt
blockStmt = '{' stmt* '}'
declStmt = 'var' IDENT '=' expr ';'
printStmt = 'print' expr ';'
exprStmt = expr [('=' | '+=' | '-=' | '*=' | '/=' | '%=' ) expr] ';'
ifStmt = 'if' expr blockStmt {'elif' expr blockStmt} ['else' blockStmt]
whileStmt = 'while' '{' stmt* '}'

expr = logicalOr
logicalOr = logicalAnd {'||' logicalAnd}
logicalAnd = equality {'&&' equality}
equality   = comparison {( '!=' | '==' ) comparison}
comparison = term {( '>' | '>=' | '<' | '<=' ) term}
term       = factor {( '-' | '+' ) factor}
factor     = unary {( '/' | '%' | '*' ) unary}
unary      = ( '!' | '-' ) unary
           | primary
primary    = NUMBER | STRING | IDENT | 'false' | 'true'
           | '(' expr ')'