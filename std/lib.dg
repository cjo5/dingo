include "libc.dg"

fun putln(str &[i8]) {
    put(str)
    putchar('\n')
}

fun putiln(i i64) {
    puti(i)
    putchar('\n')
}

fun putbool(b bool) {
    if b {
        put("true\n")
    } else {
        put("false\n")
    }
}

fun put(str &[i8]) {
    for i usize = 0; i < len(str); i++ {
        putchar(str[i])
    }
}

fun puti(i i64) {
    if i < 0 {
        putchar('-')
        putu(-i as u64)
    } else {
        putu(i as u64)
    }
}

fun putu(i u64) {
    if i >= 10 {
        putu(i/10)
    }
    putchar(('0' + i%10) as i32)
}

fun getln(buf &var [i8], null_terminate bool) &var [i8] {
    var max = len(buf)
    if null_terminate && max > 0 {
        max--
    }
    var end = false
    var n usize
    while n < max && !end {
        val ch = getchar()
        if ch == '\r' {
            // Wait for '\n'
        } elif ch == '\n' {
            end = true
        } else {
            buf[n] = ch as i8
            n++
        }
    }
    if n == max && !end {
        return null
    }
    if null_terminate {
        buf[n] = 0
    }
    return &var buf[:n]
}